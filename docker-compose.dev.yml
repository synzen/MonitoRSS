name: monitorss-dev
services:
  feed-requests-redis-cache:
    extends:
      file: docker-compose.base.yml
      service: feed-requests-redis-cache
    ports:
      - 6379:6379

  seaweed-fs:
    image: chrislusf/seaweedfs
    container_name: 'seaweed-fs'
    ports:
      - 8333:8333
    command: server -s3
    healthcheck:
      test: curl --fail http://localhost:8333 || text 1
      interval: 5s
      timeout: 10s
      retries: 20
    volumes:
      - fs-s3-storage-data:/data/seaweed-s3
    networks:
      - monitorss-default
  
  rabbitmq-broker:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq-broker
    ports:
        - 5672:5672
        - 15672:15672

  mongo:
    extends:
      file: docker-compose.base.yml
      service: mongo
    ports:
      - "27018:27017"
  
  feed-requests-postgres-db:
    extends:
      file: docker-compose.base.yml
      service: feed-requests-postgres-db
    ports:
      - "5431:5432"
      
  user-feeds-postgres-db:
    extends:
      file: docker-compose.base.yml
      service: user-feeds-postgres-db
    ports:
      - '5430:5432'

  bot-presence-service:
    extends:
      file: docker-compose.base.yml
      service: bot-presence-service
    volumes:
      - ./services/bot-presence:/usr/src/app
      - /usr/src/app/node_modules/
    command: npm run start:dev
    env_file:
      - ./.env.local
    environment:
      - NODE_ENV=development

  discord-rest-listener-service:
    extends:
      file: docker-compose.base.yml
      service: discord-rest-listener-service
    volumes:
      - ./services/discord-rest-listener:/usr/src/app
      - /usr/src/app/node_modules/
    command: npm start
    env_file:
      - ./.env.local

  feed-requests-service:
    extends:
      file: docker-compose.base.yml
      service: feed-requests-service
    volumes:
      - ./services/feed-requests:/usr/src/app
      - /usr/src/app/node_modules/
    command: npm run start:watch
    env_file:
      - ./.env.local
    environment:
      - LOG_LEVEL=debug
      - FEED_REQUESTS_S3_ENDPOINT=http://seaweed-fs:8333
      - FEED_REQUESTS_S3_API_KEY_ID=1
      - FEED_REQUESTS_S3_API_KEY=1
      - FEED_REQUESTS_START_TARGET=service
      - NODE_ENV=local

  feed-requests-api:
    extends:
      file: docker-compose.base.yml
      service: feed-requests-service
    volumes:
      - ./services/feed-requests:/usr/src/app
      - /usr/src/app/node_modules/
    ports:
      - "5000:5000"
      - "4999:4999"
    command: npm run start:watch
    env_file:
      - ./.env.local
    environment:
      - FEED_REQUESTS_START_TARGET=api
      - NODE_ENV=local
    networks:
      - monitorss-default

  feed-requests-postgres-migration:
    extends:
      file: docker-compose.base.yml
      service: feed-requests-postgres-migration
    command: "npm run migration:up"
    env_file:
      - ./.env.local
    environment:
      - FEED_REQUESTS_S3_ENDPOINT=http://seaweed-fs:8333
      - FEED_REQUESTS_S3_API_KEY_ID=1
      - FEED_REQUESTS_S3_API_KEY=1
      - LOG_LEVEL=debug
      - NODE_ENV=local

  user-feeds-service:
    extends:
      file: docker-compose.base.yml
      service: user-feeds-service
    volumes:
      - ./services/user-feeds:/usr/src/app
      - /usr/src/app/node_modules/
    command: npm run start:watch
    env_file:
      - ./.env.local
    environment:
      - LOG_LEVEL=debug
      - USER_FEEDS_START_TARGET=service
      - NODE_ENV=local
      - USER_FEEDS_FEED_REQUESTS_API_URL=http://feed-requests-api:5000/v1/feed-requests
      - USER_FEEDS_FEED_REQUESTS_GRPC_URL=dns:///feed-requests-service:4999

  user-feeds-api:
    extends:
      file: docker-compose.base.yml
      service: user-feeds-service
    volumes:
      - ./services/user-feeds:/usr/src/app
      - /usr/src/app/node_modules/
    ports:
      - "5001:5000"
    command: npm run start:watch
    env_file:
      - ./.env.local
    environment:
      - LOG_LEVEL=debug
      - USER_FEEDS_START_TARGET=api
      - NODE_ENV=local
      - USER_FEEDS_FEED_REQUESTS_API_URL=http://feed-requests-api:5000/v1/feed-requests
      - USER_FEEDS_FEED_REQUESTS_GRPC_URL=dns:///feed-requests-service:4999
    networks:
      - monitorss-default

  user-feeds-postgres-migration:
    extends:
      file: docker-compose.base.yml
      service: user-feeds-postgres-migration
    command: npm run migration:up
    env_file:
      - ./.env.local
    environment:
      - NODE_ENV=local
  
  # Schedule emitter
  schedule-emitter-service:
    extends:
      file: docker-compose.base.yml
      service: schedule-emitter-service
    volumes:
      - ./services/backend-api:/usr/src/app
      - /usr/src/app/node_modules/
    env_file:
      - ./.env.local
    environment:
      - NODE_ENV=local
      - LOG_LEVEL=debug

  # Schedule emitter
  legacy-feed-bulk-converter-service:
    extends:
      file: docker-compose.base.yml
      service: legacy-feed-bulk-converter-service
    volumes:
      - ./services/backend-api:/usr/src/app
      - /usr/src/app/node_modules/
    env_file:
      - ./.env.local
    environment:
      - NODE_ENV=local
    command: npm run start:legacy-feed-converter:local

  # Web - Backend api
  web-api:
    extends:
      file: docker-compose.base.yml
      service: web-api
    volumes:
      - ./services/backend-api:/usr/src/app
      - /usr/src/app/node_modules/
    env_file:
      - ./.env.local
    environment:
      - BACKEND_API_NODE_ENV=local
      - BACKEND_API_USER_FEEDS_API_HOST=http://user-feeds-api:5000
      - LOG_LEVEL=debug
      - NODE_ENV=local
      - BACKEND_API_USER_FEEDS_API_HOST=http://user-feeds-api:5000
      - BACKEND_API_FEED_REQUESTS_API_HOST=http://feed-requests-api:5000
    command: npm run start:local
    networks:
      - monitorss-default

  web-client:
    extends:
      file: docker-compose.base.yml
      service: web-client

volumes:
  mongodb-data:
  feed-requests-postgres-data:
  user-feeds-postgres-data:
  feed-requests-redis-data:
  fs-s3-storage-data:
    driver: local

networks:
  monitorss-default:
    driver: bridge